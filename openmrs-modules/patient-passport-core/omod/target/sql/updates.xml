<?xml version="1.0" encoding="UTF-8"?>
<databaseUpdater>
    <version>1.0.0</version>
    
    <changeSet id="patientpassportcore-1.0.0-create-audit-log-table">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM information_schema.tables 
                WHERE table_name = 'patientpassportcore_audit_log'
            </sqlCheck>
        </preConditions>
        
        <sql>
            CREATE TABLE patientpassportcore_audit_log (
                id INT AUTO_INCREMENT PRIMARY KEY,
                user_id INT NOT NULL,
                patient_id INT NOT NULL,
                access_type VARCHAR(50) NOT NULL,
                action VARCHAR(100) NOT NULL,
                details TEXT,
                access_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                ip_address VARCHAR(45),
                FOREIGN KEY (user_id) REFERENCES users(user_id),
                FOREIGN KEY (patient_id) REFERENCES patient(patient_id)
            );
        </sql>
        
        <rollback>
            DROP TABLE IF EXISTS patientpassportcore_audit_log;
        </rollback>
    </changeSet>
    
    <changeSet id="patientpassportcore-1.0.0-create-emergency-override-table">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM information_schema.tables 
                WHERE table_name = 'patientpassportcore_emergency_override'
            </sqlCheck>
        </preConditions>
        
        <sql>
            CREATE TABLE patientpassportcore_emergency_override (
                id INT AUTO_INCREMENT PRIMARY KEY,
                user_id INT NOT NULL,
                patient_id INT NOT NULL,
                justification TEXT NOT NULL,
                access_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                ip_address VARCHAR(45),
                FOREIGN KEY (user_id) REFERENCES users(user_id),
                FOREIGN KEY (patient_id) REFERENCES patient(patient_id)
            );
        </sql>
        
        <rollback>
            DROP TABLE IF EXISTS patientpassportcore_emergency_override;
        </rollback>
    </changeSet>
    
    <changeSet id="patientpassportcore-1.0.0-create-universal-patient-id-type">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM patient_identifier_type 
                WHERE name = 'UNIVERSAL_PATIENT_ID'
            </sqlCheck>
        </preConditions>
        
        <sql>
            INSERT INTO patient_identifier_type (
                name, description, format, check_digit, 
                required, validator, location_behavior, 
                retired, uuid, creator, date_created
            ) VALUES (
                'UNIVERSAL_PATIENT_ID', 
                'Universal Patient Identifier for Patient Passport',
                '^[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}$',
                0, 0, 'org.openmrs.patient.impl.LuhnIdentifierValidator',
                'REQUIRED', 0, 
                UUID(), 1, NOW()
            );
        </sql>
        
        <rollback>
            UPDATE patient_identifier_type SET retired = 1 
            WHERE name = 'UNIVERSAL_PATIENT_ID';
        </rollback>
    </changeSet>
    
</databaseUpdater>








